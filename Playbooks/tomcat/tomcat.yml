---
- name: Install tomcat
  become: yes
  hosts: all
  vars:
    - username: "tomcat"
    - java_home: "/usr/lib/jvm/java-11-openjdk-amd64"
    - home_dir: "/opt/tomcat"
    - tomcat_latest: "/opt/tomcat/latest"
    - default_shell: "/bin/false"
    - tomcat_version: "10.1.14"
    - tomcat_service_file_path: /etc/systemd/system/tomcat.service
  tasks:
    - name: update packages
      apt:
        update_cache: yes
    - name: Install java11
      package:
        name: "{{ java_package }}"
        state: present
    - name: add a user tomcat
      ansible.builtin.user:
        name: "{{ username }}"
        create_home: yes
        home: "{{ home_dir }}"
        shell: "{{ default_shell }}"
    - name: Download tomcat
      ansible.builtin.get_url:
        url: https://dlcdn.apache.org/tomcat/tomcat-10/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz
        dest: /tmp/apache-tomcat-{{ tomcat_version }}.tar.gz
    - name: Extract tomcat
      ansible.builtin.unarchive:
        src: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"
        owner: "{{ username }}"
        group: "{{ username }}"
        dest: "{{ home_dir }}"
        creates: "{{ home_dir }}/apache-tomcat-{{ tomcat_version }}"
        remote_src: yes
    - name: Create a symlink
      ansible.builtin.file:
        src: "{{ home_dir }}/apache-tomcat-{{ tomcat_version }}"
        dest: "{{ tomcat_latest }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        state: link
    - name: change ownership
      ansible.builtin.file:
        path: "{{ home_dir }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        state: directory
        recurse: yes
    - name: finding shell files
      ansible.builtin.find:
        paths: "{{ tomcat_latest }}/bin"
        patterns: "*.sh"
      register: shell_files_executables
    - name: Printing the previous variable    
      debug:
          var: shell_files_executables
    - name: execuatble permissions to shell files
      ansible.builtin.file:
        path: "{{ item.path }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: "0755"
      loop: "{{ shell_files_executables.files }}"
    - name: copy the service file
      ansible.builtin.template:
        src: 'tomcat.service.j2'
        dest: "{{ tomcat_service_file_path }}"
        owner: "{{ username }}"
        group: "{{ username }}"
      notify:
        - Reload the daemon enable and start the tomcat service
    - name: Force all notified handlers to run at this point, not waiting for normal sync points
      ansible.builtin.meta: flush_handlers
    - name: ensure tomcat service is running
      ansible.builtin.systemd:
        name: 'tomcat.service'
        state: started
  handlers:  
    - name: Reload the daemon enable and start the tomcat service
      ansible.builtin.systemd:
        name: 'tomcat.service'
        daemon_reload: yes
        enabled: yes
        state: restarted
